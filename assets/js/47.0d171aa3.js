(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{563:function(s,a,t){"use strict";t.r(a);var e=t(5),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"path"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[s._v("#")]),s._v(" path")]),s._v(" "),t("p",[s._v("path 模块提供用于处理文件路径和目录路径的实用工具。")]),s._v(" "),t("h3",{attrs:{id:"normalize、join、resolve"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#normalize、join、resolve"}},[s._v("#")]),s._v(" normalize、join、resolve")]),s._v(" "),t("ul",[t("li",[s._v("path.normalize() 方法规范化给定的 path，解析 '..' 和 '.' 片段。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("normalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/foo/bar//baz/asdf/quux/..'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回: '/foo/bar/baz/asdf'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("path.join方法使用平台特定分隔符作为定界符将所有给定的path片段连接在一起，然后生成规范的路径")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/foo'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'baz/asdf'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'..'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回: '/foo/bar/baz/asdf'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("path.resolve([...paths])把一个相对路径解析成一个绝对路径。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("paths"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wwwroot'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'static_files/png/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../gif/image.gif'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果当前工作目录是 /home/myself/node，")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 则返回 '/home/myself/node/wwwroot/static_files/gif/image.gif')")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"basename、dirname、extname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basename、dirname、extname"}},[s._v("#")]),s._v(" basename、dirname、extname")]),s._v(" "),t("ul",[t("li",[s._v("basename\n"),t("ul",[t("li",[s._v("文件名.拓展名")])])]),s._v(" "),t("li",[s._v("dirname\n"),t("ul",[t("li",[s._v("所在的文件夹")])])]),s._v(" "),t("li",[s._v("extname\n"),t("ul",[t("li",[s._v("拓展名是什么")])])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('┌─────────────────────┬────────────┐\n│          dir        │    base    │\n├──────┬              ├──────┬─────┤\n│ root │              │ name │ ext │\n"  /    home/user/dir / file  .txt "\n└──────┴──────────────┴──────┴─────┘\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"parse-与-format"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parse-与-format"}},[s._v("#")]),s._v(" parse 与 format")]),s._v(" "),t("ul",[t("li",[s._v("parse是将字符串形式的文件路径给解析成一个包含 root, dir, base, name, ext属性的对象")]),s._v(" "),t("li",[s._v("format则是将这个对象代表的路径转成字符串形式，与parse相反")])]),s._v(" "),t("p",[s._v("如果有了一个路径指向修改其中的一个内容，那么就可以使用parse转成对象然后修改后使用format在转成一个新路径。")]),s._v(" "),t("p",[s._v("当为 pathObject 提供属性时，注意以下组合，其中一些属性优先于另一些属性：")]),s._v(" "),t("ul",[t("li",[s._v("如果提供了 pathObject.dir，则忽略 pathObject.root。")]),s._v(" "),t("li",[s._v("如果 pathObject.base 存在，则忽略 pathObject.ext 和 pathObject.name。")])]),s._v(" "),t("h3",{attrs:{id:"sep、delimiter、win32、posix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sep、delimiter、win32、posix"}},[s._v("#")]),s._v(" sep、delimiter、win32、posix")]),s._v(" "),t("ul",[t("li",[s._v("sep提供平台特定的路径片段分隔符：\n"),t("ul",[t("li",[s._v("Windows 上是 \\；POSIX 上是 /")])])])]),s._v(" "),t("h1",{attrs:{id:"process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/process.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("process"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"process-cwd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-cwd"}},[s._v("#")]),s._v(" process.cwd()")]),s._v(" "),t("p",[s._v("cwd()方法可以获得当前执行的路径。和linux下的cwd一样")]),s._v(" "),t("h3",{attrs:{id:"process-argv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-argv"}},[s._v("#")]),s._v(" process.argv")]),s._v(" "),t("p",[t("code",[s._v("process.argv")]),s._v(" 属性返回一个数组，其中包含当启动 Node.js 进程时传入的命令行参数。")]),s._v(" "),t("ul",[t("li",[s._v("数组第一个元素为：node所安装的路径")]),s._v(" "),t("li",[s._v("数组第二个元素为：当前执行文件的路径")]),s._v(" "),t("li",[s._v("剩余元素为执行node命令时传入的参数")])]),s._v(" "),t("h3",{attrs:{id:"process-argv0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-argv0"}},[s._v("#")]),s._v(" process.argv0")]),s._v(" "),t("p",[s._v("保存了process.argv数组的第一个值的"),t("em",[s._v("引用")]),s._v("，不常用")]),s._v(" "),t("h3",{attrs:{id:"process-execargv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-execargv"}},[s._v("#")]),s._v(" process.execArgv")]),s._v(" "),t("p",[s._v("process.execArgv 属性返回当Node.js进程被启动时，Node.js特定的命令行选项（位于node后，文件名之前）。 这些选项在process.argv属性返回的数组中不会出现。")]),s._v(" "),t("h3",{attrs:{id:"process-execpath"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-execpath"}},[s._v("#")]),s._v(" process.execPath")]),s._v(" "),t("p",[s._v("返回启动 Node.js 进程的可执行文件的绝对路径名。基本就是 process.argv 的第一个参数")]),s._v(" "),t("h3",{attrs:{id:"process-env"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-env"}},[s._v("#")]),s._v(" process.env")]),s._v(" "),t("p",[s._v("process.env 属性返回包含用户环境的对象。")]),s._v(" "),t("h4",{attrs:{id:"process-env-path"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-env-path"}},[s._v("#")]),s._v(" process.env.PATH")])])}),[],!1,null,null,null);a.default=r.exports}}]);