(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{594:function(e,t,r){"use strict";r.r(t);var o=r(5),l=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("随着前端项目复杂性不断提高，JS的代码量变的越来越大，必须做拆分。但如果仅是拆成几个 js 文件，然后在用"),r("code",[e._v("script")]),e._v("标签去引入这些文件又会使导致以下几个问题：")]),e._v(" "),r("ul",[r("li",[e._v("影响加载速度\n"),r("ul",[r("li",[e._v("JS文件变多，加载JS文件数量过多导致页面加载速度编码")])])]),e._v(" "),r("li",[e._v("代码的引入次序\n"),r("ul",[r("li",[e._v("使用script标签引入JS时还必须控制JS的顺序。在单个JS文件编写的时候，如果要使用其他的JS文件中的一些变量和函数，不能直观的知道这个变量或函数是在哪个文件定义的。")])])]),e._v(" "),r("li",[e._v("命名空间污染\n"),r("ul",[r("li",[e._v("JS虽然拆开了，但实际上在浏览器运行时就像把所有文件都何在一起了一样")])])])]),e._v(" "),r("p",[e._v("模块化可以解决上面的问题，但是模块化后的代码是使用"),r("code",[e._v("import")]),e._v("或"),r("code",[e._v("export")]),e._v("这样的写法来实现的，浏览器不能识别，所以需要一个打包工具。")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://webpack.js.org/concepts/modules/#what-is-a-webpack-module",target:"_blank",rel:"noopener noreferrer"}},[e._v("What is webpack moudule"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://webpack.js.org/concepts/modules/#supported-module-types",target:"_blank",rel:"noopener noreferrer"}},[e._v("Supported Module Types"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://webpack.js.org/api/module-methods/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Module Methods"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://webpack.js.org/api/module-variables/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Module Variables"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=l.exports}}]);