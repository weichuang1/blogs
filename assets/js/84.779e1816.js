(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{602:function(s,o,i){"use strict";i.r(o);var e=i(5),v=Object(e.a)({},(function(){var s=this,o=s.$createElement,i=s._self._c||o;return i("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[i("h2",{attrs:{id:"应用场景"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),i("p",[s._v("cookie:\n登录网站，第一天输入用户名密码登录了，第二天再打开很多情况下就直接打开了。这个时候用到的一个机制就是cookie。")]),s._v(" "),i("p",[s._v("session:\nsession一个场景是购物车，添加了商品之后客户端处可以知道添加了哪些商品，而服务器端如何判别呢，所以也需要存储一些信息就用到了session。")]),s._v(" "),i("h2",{attrs:{id:"cookie"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[s._v("#")]),s._v(" cookie")]),s._v(" "),i("p",[s._v("服务器通过设置"),i("code",[s._v("set-cookie")]),s._v("这个响应头，将cookie信息返回给浏览器，浏览器将响应头中的cookie信息保存在本地，当下次向服务器发送HTTP请求时，浏览器会自动将保存的这些cookie信息添加到请求头中。")]),s._v(" "),i("p",[s._v("通过cookie，服务器就会识别出浏览器，从而保证返回的数据是这个用户的。")]),s._v(" "),i("ul",[i("li",[s._v("通过"),i("code",[s._v("set-cookie")]),s._v("设置")]),s._v(" "),i("li",[s._v("下次请求会自动带上")]),s._v(" "),i("li",[s._v("键值对，可设置多个")])]),s._v(" "),i("h3",{attrs:{id:"cookie属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#cookie属性"}},[s._v("#")]),s._v(" cookie属性")]),s._v(" "),i("ul",[i("li",[s._v("max-age\n"),i("ul",[i("li",[s._v("过期时间有多长")]),s._v(" "),i("li",[s._v("默认在浏览器关闭时失效")])])]),s._v(" "),i("li",[s._v("expires\n"),i("ul",[i("li",[s._v("到哪个时间点过期")])])]),s._v(" "),i("li",[s._v("secure\n"),i("ul",[i("li",[s._v("表示这个cookie只会在https的时候才会发送")])])]),s._v(" "),i("li",[s._v("HttpOnly\n"),i("ul",[i("li",[s._v("设置后无法通过在js中使用document.cookie访问")]),s._v(" "),i("li",[s._v("保障安全，防止攻击者盗用用户cookie")])])]),s._v(" "),i("li",[s._v("domain\n"),i("ul",[i("li",[s._v("表示该cookie对于哪个域是有效的。")])])])]),s._v(" "),i("h2",{attrs:{id:"session"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[s._v("#")]),s._v(" session")]),s._v(" "),i("ul",[i("li",[s._v("存放在服务器的一种用来存放用户数据的类似HashTable的结构")]),s._v(" "),i("li",[s._v("浏览器第一次发送请求时，服务器自动生成了HashTable和SessionID来唯一标识这个hash表，并将sessionID存放在cookie中通过响应发送到浏览器。浏览器第二次发送请求会将前一次服务器响应中的sessionID随着cookie发送到服务器上，服务器从请求中提取sessionID，并和保存的所有sessionID进行对比，找到这个用户对应的hash表。\n"),i("ul",[i("li",[s._v("一般这个值是有时间限制的，超时后销毁，默认30min")])])]),s._v(" "),i("li",[s._v("当用户在应用程序的web页面间挑转时，存储在session对象中的变量不会丢失而是在整个用户会话中一直存在下去。")]),s._v(" "),i("li",[s._v("session依赖于cookie，因为sessionID是存放在cookie中的。")])]),s._v(" "),i("h2",{attrs:{id:"sesssion与cookie的区别"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#sesssion与cookie的区别"}},[s._v("#")]),s._v(" sesssion与cookie的区别")]),s._v(" "),i("ul",[i("li",[s._v("cookie存在客户端，session存在于服务端。")]),s._v(" "),i("li",[s._v("cookie在客户端中存放，容易伪造，不如session安全")]),s._v(" "),i("li",[s._v("session会消耗大量服务器资源，cookie在每次HTTP请求中都会带上，影响网络性能")]),s._v(" "),i("li",[s._v("域的支持范围不一样，比方说a.com的Cookie在a.com下都能用，而www.a.com的Session在api.a.com下都不能用")])])])}),[],!1,null,null,null);o.default=v.exports}}]);